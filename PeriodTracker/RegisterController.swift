//
//  RegisterController.swift
//  PeriodTracker
//
//  Created by Brian Lykes on 11/4/18.
//  Copyright Â© 2018 Brian Lykes. All rights reserved.
//

import Foundation
import UIKit
import Firebase
import FirebaseAuth



//var db: Firestore?
//var ref: DatabaseReference!

//ref = Database.database().refrence()

class RegisterController: UIViewController {
    //username variable
    @IBOutlet weak var userName: UITextField!
    
    //password variable
    @IBOutlet weak var passWord: UITextField!
    
    var docRef: DocumentReference!
    override func viewDidLoad() {
        super.viewDidLoad()
        
        //Start Setup
       // let settings = FirestoreSettings()
       // Firestore.firestore().settings = settings
        //db = Firestore.firestore()
       //docRef = FireStore.firestore().collection("users").document("userid")
        docRef = Firestore.firestore().document("users/userid")
    }
    
    //TODO: registration functionality
    /// This functin creates the user in Firebase. It takes the variables and conects the to the test firlds in the UI.
    /// It also creates a default auth object using Auth.auth() and then calls the crete user methods form Firebase to create the user in the auth system.
    /// Error messgfe is displayed if user leaves fields blank.
    /// - Parameter sender: sends userName and passWord as strings
    @IBAction func registerTapped(_ sender: Any) {
        //variable and action for getting username for document
        guard let userID = userName.text, !userID.isEmpty else {return}
        
        let dataToSave: [String: Any] = ["username": userID]
        docRef.setData(dataToSave) { (error) in
            if let error = error {
                print("Got an error: \(error.localizedDescription)")
            } else {
                print("Data saved")
            }
        }
            
        if userName.text == "" {
            let alertController = UIAlertController(title: "Error", message: "Please enter email and pass", preferredStyle: .alert)
            let defaultAction = UIAlertAction(title: "OK", style: .cancel, handler: nil)
            alertController.addAction(defaultAction)
            self.present(alertController, animated: true, completion: nil)
            
        } else {
            Auth.auth().createUser(withEmail: userName.text!, password: passWord.text!) { (user, error) in
                
                if error == nil {
                    print ("you have successfully registered")
                    
                    let mainTabController = self.storyboard?.instantiateViewController(withIdentifier: "MainTabController") as! MainTabController
                    self.present(mainTabController, animated: true, completion: nil)
                } else {
                    let alertController = UIAlertController(title: "Error" , message: error?.localizedDescription, preferredStyle: .alert)
                    
                    let defaultAction = UIAlertAction(title: "OK", style: .cancel, handler: nil)
                    alertController.addAction(defaultAction)
                    self.present(alertController, animated: true, completion: nil)
                }
            }
        }
    }
    
    //MARK: Adds new document to database
   // func newUserDocument () {
        
        
        
        
        
        
        
        
        
        /*
        //variable grab for Firestore. Should set userID as email (not something we would normally want to do in  production in plain sight in database. Will secure if possible once functional)
        guard let userId = userName.text, !userId.isEmpty else {return}
        
        let dataToSave: [String: Any] = ["userId": userId]
        var docRef: DocumentReference!
        docRef = db.document("users/userid")
        
        //adds a new user (which is a document in noSQL) with an ID generated by swift
        //var currentDateTime = NSDate()
       // let userID = Auth.auth().currentUser!.uid
        
        //let uuid = UUID().uuidString
        
       // let docData: [String: Any] = [userId:userName]
        
        docRef.setData(dataToSave) { (error) in
            if let error = error {
                print("Error adding document: \(error.localizedDescription)")
            } else {
                print("Data Saved")
            }
        }
       
        db.collection("users").document(userId).setData([
            "fertile" : 0,
            "period" : 0,
            "startDate" : NSDate(),
            "totalCycle" : 0
        ]) { err in
            if let err = err {
                print ("Error adding document: \(err)")
            } else {
                print("Document added with ID: \(userId)")
            }
        }
 */
   // } //end of createUser function
 
}
